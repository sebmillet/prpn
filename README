
      pRPN, a portable RPN calculator inspired by HP.
      ===============================================

$LastChangedDate$

Contents:

      I. WHAT IS PRPN?
     II. WHY PRPN?
    III. LICENCE
     IV. COMPILATION AND INSTALLATION



I.    WHAT IS PRPN?

It is an RPN calculator based on wxWidgets for the GUI, that provides the
following objects: Reals, Complex, Vectors, Matrices, Binaries, Lists,
Expressions, Strings and Programs.
Expressions are minimalistic right now, they are not usable as such. On the
other hand, programs are almost fully implemented.
pRPN also provides a terminal interface if launched with -c option (see the
note in section IV about Windows version.)



II.   WHY PRPN?

I like to use my genuine HP-28S, and I didn't find any program close to the
power it brings with a similar simple interface. pRPN provides it.
At the moment the engine manages all HP objects except expressions. The
graphical interface is complete with different skins applicable.



III.  LICENCE

See COPYING file that comes along with the package the program belongs to.



IV.   COMPILATION AND INSTALLATION

The file of name INSTALL, distributed with pRPN source files, gives
instructions to compile and install the program, using the usual
    ./configure, make and sudo make install sequence.
This INSTALL file is the one provided by default by autotools.
Below is found information specific to this package.


- Linux compilation

    The configure script provides the following options in addition to the
    defaults.
    --disable-gui
        Compile without wxWidgets GUI => build a console-only executable
    --enable-debug
        Activate pRPN debug information (has nothing to do with wxWidgets debug
        system)
    --disable-nls
        Deactivate internationalization,
    --enable-maintainer-mode
        This option causes documentation to be rebuilt if necessary

    Note
      Bakefile files (.bkl extension) are used for Windows. Under Linux, the
      standard automake/autoconf couple is used, without any bakefile piece.
      Bakefile provides a halfway solution to get mixed with autotools
      (bakefilize, that replaces automake but keep using autoconf), that isn't
      in use here.
      Using bakefile generated makefiles under Linux is presumed to work fine
      but has not been tested for a while.


- Windows compilation

    pRPN compiles with MinGW or Microsoft Visual C++ (msvc)
    It does not compile with Borland C++, see (4) below
    Before compiling pRPN you have to compile wxWidgets library
    Both graphical and console programs are produced by the build, see (5)

    * Instructions in brief *

      a) Install your compiler, either MinGW or msvc.
           URL for MinGW: http://www.mingw.org/wiki/InstallationHOWTOforMinGW
      b) Install bakefile, URL: http://www.bakefile.org/download.html
      c) Install WX library source, URL: http://www.wxwidgets.org/downloads
      d) Edit gen-win-makefiles.cmd according to your environment, re (1)
      e) Compile wxWidgets library, re (2)
      f) Run gen-win-makefiles.cmd to refresh makefile.vc and makefile.gcc
      g) Compile pRPN, re(3)

    (1) Edit gen-win-makefiles.cmd according to your environment

        The batch file gen-win-makefiles.cmd automates makefile.vc (msvc) and
        makefile.gcc (mingw) generation with bakefile.

        - By default the makefile.vc and makefile.gcc files assume libintl is
          found inside C:\MinGW, meaning, the include is in
            C:\MinGW\include
          and the lib file is in
            C:\MinGW\lib
        - Also the wxWidgets library is assumed to be in C:\WX and the
          environment variable WXWIN updated accordingly:
            WXWIN=C:\WX

        If ever the situation is different, say, libintl library is in
        "C:\My Rep" and WX is in "C:\My Wx", you have to do the following:
            1- Update lines 8 and 9 of gen-win-makefiles.cmd as follows:
                 @set DIR_INCLUDE_LIBINTL="C:\My Rep\include"
                 @set DIR_LIB_LIBINTL="C:\My Rep\lib"
            2- After installing WX library in "C:\My Wx", set the environment
               variable WXWIN to the value "C:\My Wx":
                 set WXWIN="C:\My Wx"
               (it is recommended to update at system level for permanent
               availability of WXWIN variable.)

    (2) Compile wxWidgets library

       * Mingw *
         Execute:
           cd %WXWIN%\build\msw
           %MINGW32_BIN%\mingw32-make -f makefile.gcc BUILD=release WX_DEBUG=0

           (where %MINGW32_BIN% is the directory of MinGW)

         Mingw is used to compile the packaged, final, binary (included in
         Windows installer.) It uses the options BUILD=release WX_DEBUG=0 to
         optimize the code.

         Mingw is licensed under GPL mostly, its homepage is found here
           http://www.mingw.org

       * Microsoft Visual C++ 2010 Express *
         Open the msvc custom shell window and execute
           cd %WXWIN%\build\msw
           nmake -f makefile.vc BUILD=release WX_DEBUG=0

         IMPORTANT
           msvc does not compile prpn when debug is on.

         Microsoft Visual C++ 2010 Express can be downloaded for free, from
           http://msdn.microsoft.com/fr-fr/express/aa975050.aspx

    (3) Compile pRPN

       * Mingw *
         Execute:
           %MINGW32_BIN%\mingw32-make -f makefile.gcc

           (where %MINGW32_BIN% is the directory of MinGW)

       * msvc *
         Execute:
           nmake -f makefile.vc

       The executables are found in the build folers.

    (4) Note about Borland C++
        At first pRPN used to be compiled using Borland C++ 5.5. It worked
        well but over time was found to have limitations:
          - Libintl does not compile with bcc => needed to deactivate it
          - With debug options activated on Wx library, a bug caused the
            linker to fail while creating the executable => needed to avoid
            using debug
          - Macros don't manage '...' argument (variable number of arguments)

        Now, the program does not compile with bcc any longer.

        Borland C++ 5.5 can be downloaded for free, from
          http://edn.embarcadero.com/article/20633

    (5) Note about the console version
        Under Windows, by default, wxWidgets disconnects itself from the
        controlling terminal, making it impossible to interact with the
        console. Therefore the '-c' option with prpn is useless, you must
        execute prpnc.

        Under Linux both 'prpn -c' and prpnc work fine, but still, prpnc has
        an advantage.
        When providing the -c option under Linux, prpn initializes Gtk any way
        and fails to start if Gtk initialization fails. In particular,
        executing the following
          DISPLAY="" prpn -c
        won't work.
        prpnc works fine even if no graphical resource at all is available on
        the terminal.

