pRPN(1) 							       pRPN(1)



NAME
       pRPN  -	une  calculatrice en notation polonaise inverse multi systèmes
       d'exploitation


SYNOPSIS
       prpn [options]
       prpnc [options]

       prpn est l'exécutable principal, en mode graphique. prpnc est  la  ver‐
       sion en ligne de commande. prpnc est équivalent à prpn -c.


DESCRIPTION
       Le  programme  pRPN  est une calculatrice en notation polonaise inverse
       inspirée des calculatrices HP de la fin des années 80.

OPTIONS
       -h, --help
	      Affiche l'aide et quitte.

       -v --version
	      Affiche le numéro de version et quitte.

       -c, --console
	      Exécution en mode console.

       -w, --width width
	      Définis la largeur à width, mesurée en nombre de caractères.  23
	      par défaut.

       -h, --height height
	      Définis  la hauteur à height, mesurée en nombre de lignes. 5 par
	      défaut.

       --min-stack-height min-stack-height
	      Définis la hauteur minimale  à  height,  mesurée	en  nombre  de
	      lignes. height par défaut. Uniquement en mode console.

       -b, --batch
	      Mode batch, implique le mode console.

       -z, --dry-run
	      Ignore les fichiers rc.

       -a, --class
	      Affiche le comptage des classes avant de terminer.

       -d, --debug debug_option
	      Mode debug, prend un paramètre.

TYPES D'OBJETS
       Donnée

       Nombre réel
	      1.23456e-25

       Nombre complexe
	      ( )  (123.45, 678.90)

       Entier binaire
	      #    # 123AB

       Chaîne de caractères
	      " "  "RESULT"

       Vecteur
	      [ ]  [1.23 4.56 7.89]

       Matrice
	      [[ ]]	[[1.23 4.56] [6.54 3.21]]

       Liste  { }  {1.23 "ABC" # 45d}

       Noms

       Nom    ´ ´  ´CALC´

       Procédures

       Programme
	      << >>	<< DUP + SWAP >>

       Algébrique
	      ´ ´  ´X+2*Y=Z´

COMMANDES
       Les  commandes  sont  suivies  du nombre d'arguments qu'elles prennent,
       entre parenthèses. Ces arguments sont pris dans la pile.

       _HELP (0)
	      Display a help screen

       _HELP_FLAGS (0)
	      Display the list of flags

       _EXIT (0)
	      Quit program

       _ABOUT (0)
	      Display information about this program

       + (2)  Addition: x + y

       - (2)  Subtraction: x - y

       * (2)  Multiplication: x * y

       / (2)  Division: x / y

       ^ (2)  Power: x ^ y

       % (2)  Percentage: (x * y) / 100

       %CH (2)
	      Percentage change: 100 * (y - x) / x

       %T (2) Percentage of total: 100 * y / x

       MOD (2)
	      Modulus: x - y * FLOOR(x / y)

       MIN (2)
	      Minimum of two reals

       MAX (2)
	      Maximum of two reals

       COS (1)
	      Cosine

       SIN (1)
	      Sine

       TAN (1)
	      Tangent

       ACOS (1)
	      Arccos

       ASIN (1)
	      Arcsin

       ATAN (1)
	      Arctan

       LN (1) Logarihtm (e base)

       EXP (1)
	      Exponential

       LOG (1)
	      Logarithm (10 base)

       ALOG (1)
	      10 base exponential (10^x)

       LNP1 (1)
	      LN(1+x)

       EXPM (1)
	      EXP(x)-1

       COSH (1)
	      Hyperbolic cosine

       SINH (1)
	      Hyperbolic sine

       TANH (1)
	      Hyperbolic tangent

       ACOSH (1)
	      Arc-hyperbolic cosine

       ASINH (1)
	      Arc-hyperbolic sine

       ATANH (1)
	      Arc-hyperbolic tangent

       NEG (1)
	      Opposite

       IP (1) Integer part

       FP (1) Fractional part

       FLOOR (1)
	      Greatest integer lower than or equal to x

       CEIL (1)
	      Lowest integer greater than or equal to x

       ABS (1)
	      Absolute of x

       SIGN (1)
	      Sign of x: can be -1, 0 or 1

       MANT (1)
	      Mantisse of x

       XPON (1)
	      Exponent of x

       INV (1)
	      1/x

       SQ (1) Square

       SQR (1)
	      Square root

       RDZ (1)
	      Initializes random values series, 0 to start from a timer value

       RAND (0)
	      Get a random value x, 0 <= x < 1

       MINR (0)
	      Smallest real greater than zero the calcultor can represent

       MAXR (0)
	      Biggest real the calcultor can represent

       ->HMS (1)
	      Convert a decimal to HMS (h.MMSSss)

       HMS-> (1)
	      Convert a HMS (h.MMSSss) to a decimal

       HMS+ (2)
	      Add two HMS (h.MMSSss)

       HMS- (2)
	      Subtract two HMS (h.MMSSss)

       D->R (1)
	      Convert from degrees to radians

       R->D (1)
	      Convert from radians to degrees

       RAD (0)
	      Set angular mode to radians

       DEG (0)
	      Set angular mode to degrees

       +ML (0)
	      Display first item on multilpe lines

       -ML (0)
	      Display first item on a single line

       RDXP (0)
	      Set the decimal separator to '.'

       RDXC (0)
	      Set the decimal separator to ','

       R->C (2)
	      Real to complex

       C->R (1)
	      Complex to real

       RE (1) Get real part of a complex number or array

       IM (1) Get imaginary part of a complex number or array

       CONJ (1)
	      Get conjugate of a complex number or array

       ARG (1)
	      Get argument of a complex number

       R->P (1)
	      Rectangular to polar coordinates

       P->R (1)
	      Polar to rectangular coordinates

       SAME (2)
	      Is identical

       == (2) Equal to

       <> (2) Different from

       < (2)  Lower than

       <= (2) Lower than or equal to

       > (2)  Greater than

       >= (2) Greater than or equal to

       AND (2)
	      Logical and

       OR (2) Logical or

       XOR (2)
	      Logical xor

       NOT (1)
	      Logical not

       DUP (1)
	      Copy the first item

       SWAP (2)
	      Exchange the first two items

       DROP (1)
	      Delete the first item

       CLEAR (0)
	      Clear the stack

       OVER (2)
	      Copy the second item

       DUP2 (2)
	      Copy the first two items

       DROP2 (2)
	      Delete the first two items

       ROT (3)
	      Move the third item to the first position

       ROLLD (1)
	      Move the first item to the Nth position

       ROLL (1)
	      Move the Nth item to the first position

       PICK (1)
	      Copy the Nth item

       DUPN (1)
	      Copy the n first items

       DROPN (1)
	      Delete the n first items

       DEPTH (0)
	      Get the number of items

       SF (1) Set flag

       CF (1) Clear flag

       FS? (1)
	      Return 1 if flag is set, 0 otherwise

       FC? (1)
	      Return 0 if flag is set, 1 otherwise

       FS?C (1)
	      Do FS? then clear flag

       FC?C (1)
	      Do FC? then clear flag

       ->STR (1)
	      Convert to string

       STR-> (0)
	      Convert from string

       SUB (3)
	      Extract content from a string or a list

       ->LIST (1)
	      Items to list

       LIST-> (1)
	      Extract items from list

       GET (2)
	      Get an item from a list or array

       GETI (2)
	      Get an item from a list or array by increments

       PUT (3)
	      Put an item into a list or array

       PUTI (3)
	      Put an item into a list or array by increments

       SIZE (1)
	      Dimension of a list or array

       ARRY-> (1)
	      Replace an array by all its elements

       ->ARRY (1)
	      Create an array from a list of elements

       CON (2)
	      Create a constant array

       TRN (1)
	      Transpose a matrix-type array

       RDM (2)
	      Modify the dimension of an array

       IDN (1)
	      Create an identity matrix

       CROSS (2)
	      Cross product (vectorial product)

       DOT (2)
	      Dot product (scalar product)

       EVAL (0)
	      Evaluate item

       STO (2)
	      Store value in variable name

       RCL (1)
	      Recall value from variable name

       PURGE (1)
	      Remove a variable

       VARS (0)
	      Get the list of variables in current directory

       PATH (0)
	      Get the list from root to current directory

       CRDIR (1)
	      Create a directory

       HOME (0)
	      Set root directory as the current one

       UP (0) Make the parent directory the current one

       BIN (0)
	      Use binary mode for binary integers

       OCT (0)
	      Use octal mode for binary integers

       DEC (0)
	      Use decimal mode for binary integers

       HEX (0)
	      Use hexadecimal mode for binary integers

       STWS (1)
	      Define the number of bits in binary integers (1 to 64)

       RCWS (0)
	      Get the number of bits in binary integers

       B->R (1)
	      Convert a binary integer into a real

       R->B (1)
	      Convert a real into a binary integer

       RCLF (0)
	      Save flag states in a binary integer

       STOF (1)
	      Read flag states from a binary integer

       WAIT (1)
	      Wait a number of seconds

       HALT (0)
	      Halt program execution

       SST (0)
	      Execute one step in the program

       ABORT (0)
	      Abort current program execution

       KILL (0)
	      Abort all programs execution

       CONT (0)
	      Resume program execution

       STD (0)
	      Set reals display to 'standard'

       SCI (1)
	      Set reals display to 'scientific'

       FIX (1)
	      Set reals display to 'fixed number of decimals'

       ENG (1)
	      Set reals display to 'engineering'

       CLLCD (0)
	      Clear the screen

       CLMF (0)
	      Clear the message flag => unfreeze stack display

       DISP (2)
	      Display an item on a line of the screen

       _READ (1)
	      Read file and puts its content in the stack

       _WRITE (2)
	      Write the second item into the file named by the first item

       _HACK-REAL-MGMT (1)
	      Internal: tune real 'standard' display management

       _HACK-REAL-DOT (1)
	      Internal: set whether or not to keep a  trailing	dot  in  reals
	      display

       UNDO (0)
	      Undo last command, 50 levels by default

       _UNDO_LEVELS (1)
	      Define number of undo levels

       _UNDO_LEVELS? (0)
	      Get number of undo levels

RÉSOLUTION DE SYSTÈMES D'ÉQUATIONS LINÉAIRES
       Vous  pouvez  résoudre  un système d'équations linéaires en divisant un
       vecteur par une matrice.
	      Exemple Vous voudriez résoudre le système
		2x - y + z = 13
		x + 5y +3z = 3
		-2x + 4z = 4
	      Saisissez le vecteur
		[13 3 4]
	      Ensuite saisissez la matrice
		[[2 -1 1][1 5 3][-2 0 4]]
	      Faites une division en cliquant sur le bouton '/'.  Le  résultat
	      est là :
		[4 -2 3]
	      Ce qui se lit "la solution est x = 4, y = -2 et z = 3"

INSTRUCTIONS DE CONTRÔLE DES PROGRAMMES
       Note au sujet des booléens
	      Un test (IF, WHILE ou UNTIL, cf. ci-après) prend une valeur dans
	      la pile.	Cette valeur doit être de type réel. Toute valeur  non
	      nulle est traitée comme VRAI, une valeur nulle comme FAUX.
	      Ci-dessous,  le  terme "en bas de la pile" se rapporte à l'objet
	      situé au niveau 1 de la pile.

       Séquence IF/THEN/ELSE/END
	      Exécute les instructions entre IF et THEN.
	      Ensuite, prends l'élément en bas de la pile, s'il est vrai (voir
	      ci-dessus),  exécute les instructions entre THEN et ELSE (ou END
	      s'il n'y a pas de ELSE), sinon exécute les instructions du ELSE.
	      ELSE est facultatif.

       Exemple 1
	      Prends l'élément en bas de la pile et indique s'il est supérieur
	      ou égal à zéro, ou bien négatif
	      << IF 0 >= THEN "Positif ou nul" ELSE "Négatif" END >>

       Exemple 2
	      Exécute toujours les instructions du THEN
	      << IF 1 THEN "Toujours exécuté" ELSE "Jamais exécuté" END >>

       Exemple 3
	      Ne fais rien (!)
	      << IF 0 THEN "Jamais exécuté" END >>

       Séquence WHILE/REPEAT/END
	      Exécute les instructions entre WHILE et REPEAT.
	      Ensuite, prends l'élément en bas de la pile, s'il est vrai (voir
	      ci-dessus),  exécute  les  instructions  du REPEAT et recommence
	      depuis le début du WHILE.

       Exemple
	      Calcule le plus petit N pour lequel  somme(i^2  avec  i  prenant
	      toutes les valeurs entières dans l'intervalle 1..N) >= 100
	      << 0 0 -> n << WHILE DUP 100 < REPEAT n SQ + n 1 + 'n' STO END n
	      >> >>

       Séquence DO/UNTIL/END
	      Exécute les instructions entre DO et UNTIL puis entre  UNTIL  et
	      END.
	      Ensuite, prends l'élément en bas de la pile, s'il est vrai (voir
	      ci-dessus), recommence depuis le début du DO.

       Exemple
	      Calcule le plus petit N pour lequel  somme(1/i  avec  i  prenant
	      toutes les valeurs entières dans l'intervalle 1..N) >= 3
	      <<  0 0 -> n << DO n 1 + 'n' STO n INV + UNTIL DUP 7 >= END n >>
	      >>

       Séquence FOR|START/NEXT|STEP
	      FOR ou START démarre une boucle en prenant  deux	arguments,  le
	      premier (deuxième niveau de la pile) étant la valeur du compteur
	      au départ, le deuxième (premier niveau  de  la  pile)  étant  la
	      valeur   cible  du  compteur,  au-delà  de  laquelle  la	boucle
	      s'arrête.
	      START est une boucle anonyme. FOR  prend	un  nom  et  l'utilise
	      comme variable locale pour le compteur.
	      NEXT  incrémente	le compteur d'une unité si la valeur cible est
	      supérieure à la valeur de  départ,  le  décrémente  d'une  unité
	      sinon.
	      STEP  prend la valeur en bas de la pile et l'ajoute au compteur.
	      NEXT peut être utilisé indifféremment avec FOR  et  START,  même
	      chose pour STEP.

       Exemple 1
	      Calcule la somme des carrés des entiers de 1 à 10
	      << 0 1 10 FOR i i SQ + NEXT >>

       Exemple 2
	      Calcule  somme(2^i  avec	i  prenant toutes les valeurs entières
	      dans l'intervalle 1..N), N étant	la  première  valeur  dans  la
	      pile.
	      << 0 1 1 4 ROLL START DUP ROT + SWAP 2 * NEXT DROP >> EVAL

       Exemple 3
	      Calcule  somme(i avec i prenant toutes les valeurs impaires dans
	      l'intervalle 1..N), N étant la première valeur dans la pile.
	      << 0 1 ROT FOR i i + 2 STEP >>

       Documentation RPL
	      RPL est le langage de programmation des calculatrices  HP  fonc‐
	      tionnant en notation polonaise inverse.
	      http://en.wikipedia.org/wiki/RPL_%28programming_language%29

TRUCS
       Augmenter la taille de la zone de saisie
	      Appuyer sur les touches <Ctrl-Entrée>.

       Redimensionner la fenêtre à sa taille originale
	      Double-cliquer  sur  la  partie  "statut"  de la fenêtre, où les
	      modes angulaire et binaire sont affichés.

FICHIERS D'INITIALISATION
       ~/.prpn/stackrc
	      Réglages et contenu de la pile.

       ~/.prpn/varsrc
	      Structure contenant les variables, et répertoire courant.

AUTEUR
       Écrit par Sébastien Millet <sebastien.millet1@club-internet.fr>.
       Autorisation est donnée de copier, distribuer et/ou modifier  ce  docu‐
       ment  selon  les  termes de la licence "GNU General Public License". La
       version 3 est publiée par la Free Software Foundation.

BUGS
       LNP1 et EXPM

       Ces fonctions sont supposées apporter plus de précision au voisinage de
       x = 0. Rappel :
	      LNP1(x) = LN(X + 1) et EXPM(x) = EXP(x) - 1
	      A  l'heure  actuelle,  ces  fonctions  n'apportent  pas  plus de
	      précision, elles appellent simplement LN() et EXP().

       Différence entre prpn et prpnc

       Linux  prpn peut être exécuté avec l'option -c. Dans ce cas le résultat
	      est  presque  équivalent	à prpnc. "Presque" seulement. prpn est
	      compilé avec la librairie WxWidgets et initialise des ressources
	      graphiques  au  démarrage.  Si les ressources graphiques ne sont
	      pas trouvées, le programme ne démarre pas. Par exemple, si  vous
	      exécutez la commande suivante
		   DISPLAY="" prpn -c
	      Vous obtenez ce résultat
		   Error: Unable to initialize gtk, is DISPLAY set properly?
	      prpnc résout ce problème, car il n'est *pas* compilé avec WxWid‐
	      gets et peut fonctionner dans un terminal ne disposant  d'aucune
	      ressource graphique. Un moyen élégant de régler cette difficulté
	      serait  d'empêcher  WxWidgets   d'initialiser   les   ressources
	      graphiques  lorsque l'option -c est présente. Si vous connaissez
	      un moyen robuste de le faire  (portable  quels  que  soient  les
	      systèmes	et  les  versions...),	l'auteur  de  ce programme est
	      intéressé !

       Windows
	      prpn.exe ne peut *pas* être exécuté avec l'option -c. Sous  Win‐
	      dows,  WxWidgets	déconnecte  le	processus  de  son terminal de
	      contrôle. La solution est la même que sous  Linux,  sauf	qu'ici
	      c'est  obligatoire  :  vous  devez  utiliser  prpnc.exe  si vous
	      souhaitez utiliser la version en ligne de commande.



29 mars 2011			 version 0.5.2			       pRPN(1)
