pRPN(1) 							       pRPN(1)



NAME
       pRPN  -	une  calculatrice en notation polonaise inverse multi systmes
       dexploitation


SYNOPSIS
       prpn [options]


DESCRIPTION
       Le programme pRPN est une calculatrice en  notation  polonaise  inverse
       inspire des calculatrices HP de la fin des annes 80.

OPTIONS
       -h, --help
	      Affiche laide et quitte.

       -v --version
	      Affiche le numro de version et quitte.

       -c, --console
	      Excution en mode console.

       -w, --width width
	      Dfinis  la largeur  width, mesure en nombre de caractres. 23
	      par dfaut.

       -h, --height height
	      Dfinis la hauteur  height, mesure en nombre de lignes. 5	par
	      dfaut.

       --min-stack-height min-stack-height
	      Dfinis  la  hauteur  minimale    height,	mesure en nombre de
	      lignes. height par dfaut. Uniquement en mode console.

       -b, --batch
	      Mode batch, implique le mode console.

       -z, --dry-run
	      Ignore les fichiers rc.

       -a, --class
	      Affiche le comptage des classes avant de terminer.

       -d, --debug debug_option
	      Mode debug, prend un paramtre.

COMMANDES
       Les commandes sont suivies du  nombre  darguments  quelles  prennent,
       entre parenthses. Ces arguments sont pris dans la pile.

       _HELP (0)
	      Affiche un cran daide

       _HELP_FLAGS (0)
	      Affiche un cran daide sur les options

       _EXIT (0)
	      Quitte le programme

       _ABOUT (0)
	      Affiche des informations au sujet de ce programme

       + (2)  Addition : x + y

       - (2)  Soustraction : x - y

       * (2)  Multiplication : x * y

       / (2)  Division : x / y

       ^ (2)  Puissance : x ^ y

       % (2)  Pourcentage : (x * y) / 100

       %CH (2)
	      Pourcentage de changement : 100 * (y - x) / x

       %T (2) Pourcentage du total : 100 * y / x

       MOD (2)
	      Modulo : x - y * FLOOR(x / y)

       MIN (2)
	      Minimum

       MAX (2)
	      Maximum

       COS (1)
	      Cosinus

       SIN (1)
	      Sinus

       TAN (1)
	      Tangente

       ACOS (1)
	      Arc-cosinus

       ASIN (1)
	      Arc-sinus

       ATAN (1)
	      Arc-tangente

       LN (1) Logarithme (base e)

       EXP (1)
	      Exponentiel

       NEG (1)
	      Oppos

       IP (1) Partie entire

       FP (1) Partie dcimale

       FLOOR (1)
	      Plus grand entier infrieur ou gal  x

       CEIL (1)
	      Plus petit entier suprieur ou gal  x

       ABS (1)
	      Valeur absolue

       SIGN (1)
	      Signe de x : peut tre -1, 0 ou 1

       MANT (1)
	      Mantisse de x

       XPON (1)
	      Exponentielle de x

       INV (1)
	      1/x

       SQ (1) Carr

       SQR (1)
	      Racine carre

       R->C (2)
	      Rel  complexe

       C->R (1)
	      Complexe	rel

       SAME (2)
	      Est identique

       == (2) Est gal

       <> (2) Est diffrent de

       < (2)  Est plus petit que

       <= (2) Est plus petit que, ou gal

       > (2)  Est plus grand que

       >= (2) Est plus grand que, ou gal

       DUP (1)
	      Copie le premier lment

       SWAP (2)
	      change les deux premiers lments

       DROP (1)
	      Supprime le premier lment

       CLEAR (0)
	      Efface la pile

       OVER (2)
	      Copie le second lment

       DUP2 (2)
	      Copie les deux premiers lments

       DROP2 (2)
	      Supprime les deux premiers lments

       ROT (3)
	      Dplace le troisime lment en premire position

       ROLLD (1)
	      Dplace le premier lment en Nime position

       ROLL (1)
	      Dplace le Ne lment en premire position

       PICK (1)
	      Copie le Ne lment

       DUPN (1)
	      Copie les N premiers lments

       DROPN (1)
	      Supprime les N premiers lments

       DEPTH (0)
	      Renvoie le nombre dlments dans la pile

       SF (1) Active loption

       CF (1) Dsactive loption

       FS? (1)
	      Renvoie 1 si loption est active, 0 sinon

       FC? (1)
	      Renvoie 0 si loption est active, 1 sinon

       FS?C (1)
	      Excute FS? et dsactive loption

       FC?C (1)
	      Excute FC? et dsactive loption

       ->STR (1)
	      Convertis un lment en chane de caractres

       STR-> (0)
	      Convertis une chane de caractre en lments

       SUB (3)
	      Extrais le contenu dune chane de caractres ou dune liste

       ->LIST (1)
	      Mets les lments dans une liste

       LIST-> (1)
	      Convertis la liste en ses lments

       GET (2)
	      Extrais un lment dune liste ou dun tableau

       GETI (2)
	      Extrais un lment dune liste ou dun tableau par incrments

       PUT (3)
	      Remplace un lment dans une liste ou un tableau

       PUTI (3)
	      Remplace un lment dans une liste ou un tableau par incrments

       SIZE (1)
	      Dimension dune liste ou dun tableau

       ARRY-> (1)
	      Remplace un tableau par ses lments

       ->ARRY (1)
	      Cre un tableau avec les lments de la pile

       CON (2)
	      Cre un tableau constant

       TRN (1)
	      Transpose une matrice

       RDM (2)
	      Modifie les dimensions dun tableau

       IDN (1)
	      Cre une matrice identit

       EVAL (0)
	      value llment

       STO (2)
	      Enregistre la valeur dans la variable

       RCL (1)
	      Rcupre la valeur de la variable

       PURGE (1)
	      Supprime la variable

       VARS (0)
	      Renvoie la liste des variables dans le rpertoire courant

       PATH (0)
	      Renvoie le rpertoire en cours sous forme de liste

       CRDIR (1)
	      Cre un rpertoire

       HOME (0)
	      Dfinis le rpertoire racine comme rpertoire courant

       UP (0) Dfinis le rpertoire parent comme rpertoire courant

       BIN (0)
	      Utilise le mode binaire pour les entiers binaires

       OCT (0)
	      Utilise le mode octal pour les entiers binaires

       DEC (0)
	      Utilise le mode dcimal pour les entiers binaires

       HEX (0)
	      Utilise le mode hexadcimal pour les entiers binaires

       STWS (1)
	      Dfinis le nombre de bits des entiers binaires (de 1  64)

       RCWS (0)
	      Renvoie le nombre de bits des entiers binaires

       B->R (1)
	      Convertis un entier binaire en rel

       R->B (1)
	      Convertis un rel en entier binaire

       RCLF (0)
	      Enregistre ltat des options dans un entier binaire

       STOF (1)
	      Rcupre ltat des options depuis un entier binaire

       WAIT (1)
	      Pause dune dure dfinie en secondes

       STD (0)
	      Rgle laffichage des rels	standard

       SCI (1)
	      Rgle laffichage des rels	scientifique

       FIX (1)
	      Rgle laffichage des rels	nombre de dcimales fixe

       ENG (1)
	      Rgle laffichage des rels	ingnieur

       CLLCD (0)
	      Efface lcran

       CLMF (0)
	      Gle laffichage de la pile

       DISP (2)
	      Affiche une chane de caractres sur une ligne de lcran

       _READ (1)
	      Lis le fichier et met son contenu dans la pile

       _WRITE (2)
	      cris  le second lment de la pile dans le fichier nomm par le
	      premier lment

       _HACK-REAL-MGMT (1)
	      Interne : rgle la gestion de  laffichage	des  rels  en  mode
	      standard

       _HACK-REAL-DOT (1)
	      Interne  :  dtermine  sil  faut afficher un point  la fin des
	      rels

       UNDO (0)
	      Annule la dernire commande, 50 niveaux par dfaut

       _UNDO_LEVELS (1)
	      Dfinis le nombre de niveaux dannulation

       _UNDO_LEVELS? (0)
	      Renvoie le nombre de niveaux dannulations

TYPES OBJETS
       Donne

       Nombre el
	      1.23456e-25

       Nombre complexe
	      ( )  (123.45, 678.90)

       Entier binaire
	      #    # 123AB

       Chne de caracres
	      " "  "RESULT"

       Vecteur
	      [ ]  [1.23 4.56 7.89]

       Matrice
	      [[ ]]	[[1.23 4.56] [6.54 3.21]]

       Liste  { }  {1.23 "ABC" # 45d}

       Noms

       Nom	 CALC

       Procdures

       Programme
	      << >>	<< DUP + SWAP >>

       Albrique
		 X+2*Y=Z

INSTRUCTIONS DE CONTLE DES PROGRAMMES
       Note au sujet des booens
	      Un test (IF, WHILE ou UNTIL, cf. ci-aprs) prend une valeur dans
	      la  pile.  Cette valeur doit tre de type rel. Toute valeur non
	      nulle est traite comme VRAI, une valeur nulle comme FAUX.
	      Ci-dessous, le terme "en bas de la pile" se rapporte    lobjet
	      situ au niveau 1 de la pile.

       quence IF/THEN/ELSE/END
	      Excute les instructions entre IF et THEN.
	      Ensuite, prends llment en bas de la pile, sil est vrai (voir
	      ci-dessus), excute les instructions entre THEN et ELSE (ou  END
	      sil ny a pas de ELSE), sinon excute les instructions du ELSE.
	      ELSE est facultatif.

       Exemple 1
	      Prends llment en bas de la pile et indique sil est suprieur
	      ou gal  zro, ou bien ngatif
	      <<  IF  0  >=  THEN  "Valeur  positive  ou  nulle"  ELSE "Valeur
	      ngative" END >>

       Exemple 2
	      Excute toujours les instructions du THEN
	      << IF 1 THEN "Toujours excut" ELSE "Jamais excut" END >>

       Example 3
	      Ne fais rien (!)
	      << IF 0 THEN "Never executed" END >>

       quence WHILE/REPEAT/END
	      Excute les instructions entre WHILE et REPEAT.
	      Ensuite, prends llment en bas de la pile, sil est vrai (voir
	      ci-dessus),  excute  les	instructions  du REPEAT et recommence
	      depuis le dbut du WHILE.

       Exemple
	      Calcule le plus petit N pour lequel  somme(i^2  avec  i  prenant
	      toutes les valeurs entires dans lintervalle 1..N) >= 100
	      << 0 0 -> n << WHILE DUP 100 < REPEAT n SQ + n 1 + n STO END n
	      >> >>

       quence DO/UNTIL/END
	      Excute les instructions entre DO et UNTIL puis entre  UNTIL  et
	      END.
	      Ensuite, prends llment en bas de la pile, sil est vrai (voir
	      ci-dessus), recommence depuis le dbut du DO.

       Exemple
	      Calcule le plus petit N pour lequel  somme(1/i  avec  i  prenant
	      toutes les valeurs entires dans lintervalle 1..N) >= 3
	      <<  0 0 -> n << DO n 1 + n STO n INV + UNTIL DUP 3 >= END n >>
	      >>

       quence FOR|START/NEXT|STEP
	      FOR ou START dmarre une boucle en prenant  deux  arguments,  le
	      premier (deuxime niveau de la pile) tant la valeur du compteur
	      au dpart, le deuxime (premier niveau  de	la  pile)  tant  la
	      valeur   cible  du  compteur,  au-del  de  laquelle  la  boucle
	      sarrte.
	      START est une boucle anonyme. FOR  prend	un  nom  et  lutilise
	      comme variable locale pour le compteur.
	      NEXT  incrmente  le compteur dune unit si la valeur cible est
	      suprieure  la valeur de  dpart,  le  dcrmente  dune  unit
	      sinon.
	      STEP  prend la valeur en bas de la pile et lajoute au compteur.
	      NEXT peut tre utilis indiffremment avec FOR  et  START,  mme
	      chose pour STEP.

       Exemple 1
	      Calcule la somme des carrs des entiers de 1  10
	      << 0 1 10 FOR i i SQ + NEXT >>

       Exemple 2
	      Calcule  somme(2^i  avec	i  prenant toutes les valeurs entires
	      dans lintervalle 1..N), N tant  la  premire  valeur  dans  la
	      pile.
	      << 0 1 1 4 ROLL START 2 * DUP ROT + SWAP NEXT >>

       Exemple 3
	      Calcule  somme(i avec i prenant toutes les valeurs impaires dans
	      lintervalle 1..N), N tant la premire valeur dans la pile.
	      << 0 1 ROT FOR i i + 2 STEP >>

       Documentation RPL
	      RPL est le langage de programmation des calculatrices  HP  fonc
	      tionnant en notation polonaise inverse.
	      http://en.wikipedia.org/wiki/RPL_%28programming_language%29

FICHIERS INITIALISATION
       ~/.prpn/stackrc
	      Rglages et contenu de la pile.

       ~/.prpn/varsrc
	      Structure contenant les variables, et rpertoire courant.

AUTEUR
       crit   par   Sbastien   Millet  <sebastien.millet1@club-internet.fr>.
       Autorisation est donne de copier, distribuer et/ou modifier  ce	docu
       ment  selon  les  termes de la licence "GNU General Public License". La
       version 3 est publie par la Free Software Foundation.

BUGS
       - Ce programme est en version 0.5.1...

       - Version Windows : wx se dconnecte du terminal	do  il	est  lanc.
       Cest pourquoi la compilation de la version Windows produit une version
       graphique, prpn.exe, et une version console, prpnc.exe.



5 juillet 2010			 version 0.5.1			       pRPN(1)
